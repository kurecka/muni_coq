DIGEST cf4b21302554a8d3d0749496f4e34aa4
FLF.Poly
R288:292 LF.Lists <> <> lib
ind 1170:1177 <> boollist
constr 1193:1200 <> bool_nil
constr 1217:1225 <> bool_cons
R1204:1211 LF.Poly <> boollist ind
R1233:1236 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1245:1248 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1249:1256 LF.Poly <> boollist ind
R1237:1244 LF.Poly <> boollist ind
R1229:1232 LF.Basics <> bool ind
ind 1730:1733 <> list
constr 1758:1760 <> nil
constr 1775:1778 <> cons
R1764:1767 LF.Poly <> list ind
R1769:1769 LF.Poly <> X var
R1783:1786 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1793:1796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1797:1800 LF.Poly <> list ind
R1802:1802 LF.Poly <> X var
R1787:1790 LF.Poly <> list ind
R1792:1792 LF.Poly <> X var
R1782:1782 LF.Poly <> X var
R2693:2696 LF.Poly <> list ind
R3064:3066 LF.Poly <> nil constr
R3068:3070 Coq.Init.Datatypes <> nat ind
R3284:3287 LF.Poly <> cons constr
R3296:3298 LF.Poly <> nil constr
R3300:3302 Coq.Init.Datatypes <> nat ind
R3289:3291 Coq.Init.Datatypes <> nat ind
R3693:3695 LF.Poly <> nil constr
R3963:3966 LF.Poly <> cons constr
R4647:4650 LF.Poly <> cons constr
R4659:4662 LF.Poly <> cons constr
R4671:4673 LF.Poly <> nil constr
R4675:4677 Coq.Init.Datatypes <> nat ind
R4664:4666 Coq.Init.Datatypes <> nat ind
R4652:4654 Coq.Init.Datatypes <> nat ind
def 5030:5035 <> repeat
R5053:5053 LF.Poly <> X var
R5065:5067 Coq.Init.Datatypes <> nat ind
R5072:5075 LF.Poly <> list ind
R5077:5077 LF.Poly <> X var
R5090:5094 LF.Poly <> count var
R5110:5112 LF.Poly <> nil constr
R5114:5114 LF.Poly <> X var
R5120:5120 Coq.Init.Datatypes <> S constr
R5132:5135 LF.Poly <> cons constr
R5142:5147 LF.Poly <> repeat def
R5151:5151 LF.Poly <> x var
R5149:5149 LF.Poly <> X var
R5139:5139 LF.Poly <> x var
R5137:5137 LF.Poly <> X var
def 5318:5329 <> test_repeat1
R5349:5351 Coq.Init.Logic <> :type_scope:x_'='_x not
R5335:5340 LF.Poly <> repeat def
R5342:5344 Coq.Init.Datatypes <> nat ind
R5352:5355 LF.Poly <> cons constr
R5364:5367 LF.Poly <> cons constr
R5376:5378 LF.Poly <> nil constr
R5380:5382 Coq.Init.Datatypes <> nat ind
R5369:5371 Coq.Init.Datatypes <> nat ind
R5357:5359 Coq.Init.Datatypes <> nat ind
def 5542:5553 <> test_repeat2
R5578:5580 Coq.Init.Logic <> :type_scope:x_'='_x not
R5559:5564 LF.Poly <> repeat def
R5571:5575 LF.Basics <> false constr
R5566:5569 LF.Basics <> bool ind
R5581:5584 LF.Poly <> cons constr
R5598:5600 LF.Poly <> nil constr
R5602:5605 LF.Basics <> bool ind
R5591:5595 LF.Basics <> false constr
R5586:5589 LF.Basics <> bool ind
mod 5755:5767 <> MumbleGrumble
ind 5781:5786 MumbleGrumble mumble
constr 5802:5802 MumbleGrumble a
constr 5817:5817 MumbleGrumble b
constr 5849:5849 MumbleGrumble c
R5806:5811 LF.Poly <> mumble ind
R5827:5830 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5834:5837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5838:5843 LF.Poly <> mumble ind
R5831:5833 Coq.Init.Datatypes <> nat ind
R5821:5826 LF.Poly <> mumble ind
R5853:5858 LF.Poly <> mumble ind
ind 5872:5878 MumbleGrumble grumble
constr 5903:5903 MumbleGrumble d
constr 5931:5931 MumbleGrumble e
R5913:5916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5917:5923 LF.Poly <> grumble ind
R5925:5925 LF.Poly <> X var
R5907:5912 LF.Poly MumbleGrumble mumble ind
R5936:5939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5940:5946 LF.Poly <> grumble ind
R5948:5948 LF.Poly <> X var
R5935:5935 LF.Poly <> X var
R6226:6238 LF.Poly MumbleGrumble <> mod
def 6293:6323 <> manual_grade_for_mumble_grumble
R6327:6332 Coq.Init.Datatypes <> option ind
R6335:6338 Coq.Init.Datatypes <> prod ind
R6344:6349 Coq.Strings.String <> string ind
R6340:6342 Coq.Init.Datatypes <> nat ind
R6355:6358 Coq.Init.Datatypes <> None constr
def 6646:6652 <> repeat'
R6666:6669 LF.Poly <> list ind
R6671:6671 LF.Poly <> X var
R6684:6688 LF.Poly <> count var
R6711:6713 LF.Poly <> nil constr
R6715:6715 LF.Poly <> X var
R6721:6721 Coq.Init.Datatypes <> S constr
R6733:6736 LF.Poly <> cons constr
R6743:6749 LF.Poly <> repeat' def
R6753:6753 LF.Poly <> x var
R6751:6751 LF.Poly <> X var
R6740:6740 LF.Poly <> x var
R6738:6738 LF.Poly <> X var
R6853:6859 LF.Poly <> repeat' def
R6915:6920 LF.Poly <> repeat def
def 9462:9469 <> repeat''
R9483:9486 LF.Poly <> list ind
R9488:9488 LF.Poly <> X var
R9501:9505 LF.Poly <> count var
R9528:9530 LF.Poly <> nil constr
R9538:9538 Coq.Init.Datatypes <> S constr
R9550:9553 LF.Poly <> cons constr
R9560:9567 LF.Poly <> repeat'' def
R9571:9571 LF.Poly <> x var
R9557:9557 LF.Poly <> x var
def 9897:9903 <> list123
R9910:9913 LF.Poly <> cons constr
R9922:9925 LF.Poly <> cons constr
R9934:9937 LF.Poly <> cons constr
R9946:9948 LF.Poly <> nil constr
R9950:9952 Coq.Init.Datatypes <> nat ind
R9939:9941 Coq.Init.Datatypes <> nat ind
R9927:9929 Coq.Init.Datatypes <> nat ind
R9915:9917 Coq.Init.Datatypes <> nat ind
def 10026:10033 <> list123'
R10040:10043 LF.Poly <> cons constr
R10050:10053 LF.Poly <> cons constr
R10060:10063 LF.Poly <> cons constr
R10070:10072 LF.Poly <> nil constr
R10693:10695 LF.Poly <> nil constr
R10693:10695 LF.Poly <> nil constr
R10712:10715 LF.Poly <> cons constr
R10712:10715 LF.Poly <> cons constr
R10736:10741 LF.Poly <> repeat def
R10736:10741 LF.Poly <> repeat def
def 10828:10836 <> list123''
R10841:10844 LF.Poly <> cons constr
R10849:10852 LF.Poly <> cons constr
R10857:10860 LF.Poly <> cons constr
R10864:10866 LF.Poly <> nil constr
def 11056:11064 <> repeat'''
R11082:11082 LF.Poly <> X var
R11094:11096 Coq.Init.Datatypes <> nat ind
R11101:11104 LF.Poly <> list ind
R11106:11106 LF.Poly <> X var
R11119:11123 LF.Poly <> count var
R11146:11148 LF.Poly <> nil constr
R11154:11154 Coq.Init.Datatypes <> S constr
R11166:11169 LF.Poly <> cons constr
R11174:11182 LF.Poly <> repeat''' def
R11184:11184 LF.Poly <> x var
R11171:11171 LF.Poly <> x var
ind 11783:11787 <> list'
constr 11812:11815 <> nil'
constr 11829:11833 <> cons'
R11819:11823 LF.Poly <> list' ind
R11819:11823 LF.Poly <> X var
R11838:11841 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11847:11850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R11851:11855 LF.Poly <> list' ind
R11851:11855 LF.Poly <> X var
R11842:11846 LF.Poly <> list' ind
R11842:11846 LF.Poly <> X var
R11837:11837 LF.Poly <> X var
def 12291:12293 <> app
R12315:12318 LF.Poly <> list ind
R12320:12320 LF.Poly <> X var
R12339:12342 LF.Poly <> list ind
R12344:12344 LF.Poly <> X var
R12358:12359 LF.Poly <> l1 var
R12370:12372 LF.Poly <> nil constr
R12382:12383 LF.Poly <> l2 var
R12389:12392 LF.Poly <> cons constr
R12401:12404 LF.Poly <> cons constr
R12409:12411 LF.Poly <> app def
R12415:12416 LF.Poly <> l2 var
def 12436:12438 <> rev
R12452:12455 LF.Poly <> list ind
R12457:12457 LF.Poly <> X var
R12462:12465 LF.Poly <> list ind
R12467:12467 LF.Poly <> X var
R12480:12480 LF.Poly <> l var
R12491:12493 LF.Poly <> nil constr
R12503:12505 LF.Poly <> nil constr
R12511:12514 LF.Poly <> cons constr
R12523:12525 LF.Poly <> app def
R12536:12539 LF.Poly <> cons constr
R12543:12545 LF.Poly <> nil constr
R12528:12530 LF.Poly <> rev def
def 12565:12570 <> length
R12588:12591 LF.Poly <> list ind
R12593:12593 LF.Poly <> X var
R12598:12600 Coq.Init.Datatypes <> nat ind
R12613:12613 LF.Poly <> l var
R12624:12626 LF.Poly <> nil constr
R12637:12640 LF.Poly <> cons constr
R12650:12650 Coq.Init.Datatypes <> S constr
R12653:12658 LF.Poly <> length def
def 12680:12688 <> test_rev1
R12719:12722 Coq.Init.Logic <> :type_scope:x_'='_x not
R12742:12742 Coq.Init.Logic <> :type_scope:x_'='_x not
R12694:12696 LF.Poly <> rev def
R12699:12702 LF.Poly <> cons constr
R12707:12710 LF.Poly <> cons constr
R12714:12716 LF.Poly <> nil constr
R12723:12726 LF.Poly <> cons constr
R12731:12734 LF.Poly <> cons constr
R12738:12740 LF.Poly <> nil constr
def 12780:12788 <> test_rev2
R12812:12814 Coq.Init.Logic <> :type_scope:x_'='_x not
R12793:12795 LF.Poly <> rev def
R12798:12801 LF.Poly <> cons constr
R12808:12810 LF.Poly <> nil constr
R12803:12806 LF.Basics <> true constr
R12815:12818 LF.Poly <> cons constr
R12825:12827 LF.Poly <> nil constr
R12820:12823 LF.Basics <> true constr
def 12865:12876 <> test_length1
R12916:12918 Coq.Init.Logic <> :type_scope:x_'='_x not
R12879:12884 LF.Poly <> length def
R12887:12890 LF.Poly <> cons constr
R12895:12898 LF.Poly <> cons constr
R12903:12906 LF.Poly <> cons constr
R12910:12912 LF.Poly <> nil constr
def 13392:13396 <> mynil
R13401:13403 LF.Poly <> nil constr
def 13970:13974 <> mynil
R13978:13981 LF.Poly <> list ind
R13983:13985 Coq.Init.Datatypes <> nat ind
R13990:13992 LF.Poly <> nil constr
R14121:14123 LF.Poly <> nil constr
def 14138:14143 <> mynil'
R14149:14151 LF.Poly <> nil constr
R14153:14155 Coq.Init.Datatypes <> nat ind
R14437:14440 LF.Poly <> cons constr
not 14424:14424 <> ::x_'::'_x
R14522:14524 LF.Poly <> nil constr
not 14513:14513 <> ::'['_']'
R14557:14560 LF.Poly <> cons constr
R14568:14571 LF.Poly <> cons constr
R14575:14576 LF.Poly <> ::'['_']' not
not 14536:14536 <> ::'['_x_';'_'..'_';'_x_']'
R14606:14608 LF.Poly <> app def
not 14593:14593 <> ::x_'++'_x
def 14741:14750 <> list123'''
R14755:14755 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14757:14758 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14760:14761 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R14763:14763 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 15071:15079 <> app_nil_r
R15109:15112 LF.Poly <> list ind
R15114:15114 LF.Poly <> X var
R15126:15128 Coq.Init.Logic <> :type_scope:x_'='_x not
R15120:15123 LF.Poly <> ::x_'++'_x not
R15119:15119 LF.Poly <> l var
R15124:15125 LF.Poly <> ::'['_']' not
R15129:15129 LF.Poly <> l var
prf 15179:15187 <> app_assoc
R15207:15210 LF.Poly <> list ind
R15212:15212 LF.Poly <> A var
R15229:15231 Coq.Init.Logic <> :type_scope:x_'='_x not
R15219:15222 LF.Poly <> ::x_'++'_x not
R15218:15218 LF.Poly <> l var
R15224:15227 LF.Poly <> ::x_'++'_x not
R15223:15223 LF.Poly <> m var
R15228:15228 LF.Poly <> n var
R15232:15232 LF.Poly <> ::x_'++'_x not
R15239:15243 LF.Poly <> ::x_'++'_x not
R15234:15237 LF.Poly <> ::x_'++'_x not
R15233:15233 LF.Poly <> l var
R15238:15238 LF.Poly <> m var
R15244:15244 LF.Poly <> n var
prf 15292:15301 <> app_length
R15330:15333 LF.Poly <> list ind
R15335:15335 LF.Poly <> X var
R15358:15360 Coq.Init.Logic <> :type_scope:x_'='_x not
R15341:15346 LF.Poly <> length def
R15351:15354 LF.Poly <> ::x_'++'_x not
R15349:15350 LF.Poly <> l1 var
R15355:15356 LF.Poly <> l2 var
R15370:15372 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R15361:15366 LF.Poly <> length def
R15368:15369 LF.Poly <> l1 var
R15373:15378 LF.Poly <> length def
R15380:15381 LF.Poly <> l2 var
prf 15560:15572 <> rev_app_distr
R15593:15596 LF.Poly <> list ind
R15598:15598 LF.Poly <> X var
R15618:15620 Coq.Init.Logic <> :type_scope:x_'='_x not
R15604:15606 LF.Poly <> rev def
R15611:15614 LF.Poly <> ::x_'++'_x not
R15609:15610 LF.Poly <> l1 var
R15615:15616 LF.Poly <> l2 var
R15627:15630 LF.Poly <> ::x_'++'_x not
R15621:15623 LF.Poly <> rev def
R15625:15626 LF.Poly <> l2 var
R15631:15633 LF.Poly <> rev def
R15635:15636 LF.Poly <> l1 var
prf 15686:15699 <> rev_involutive
R15731:15734 LF.Poly <> list ind
R15736:15736 LF.Poly <> X var
R15752:15754 Coq.Init.Logic <> :type_scope:x_'='_x not
R15741:15743 LF.Poly <> rev def
R15746:15748 LF.Poly <> rev def
R15750:15750 LF.Poly <> l var
R15755:15755 LF.Poly <> l var
ind 16099:16102 <> prod
constr 16129:16132 <> pair
R16137:16140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16142:16145 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16146:16149 LF.Poly <> prod ind
R16153:16153 LF.Poly <> Y var
R16151:16151 LF.Poly <> X var
R16141:16141 LF.Poly <> Y var
R16136:16136 LF.Poly <> X var
R16167:16170 LF.Poly <> pair constr
R16167:16170 LF.Poly <> pair constr
R16317:16320 LF.Poly <> pair constr
not 16301:16301 <> ::'('_x_','_x_')'
R16456:16459 LF.Poly <> prod ind
not 16444:16444 <> :type_scope:x_'*'_x
def 17058:17060 <> fst
R17081:17083 LF.Poly <> :type_scope:x_'*'_x not
R17080:17080 LF.Poly <> X var
R17084:17084 LF.Poly <> Y var
R17089:17089 LF.Poly <> X var
R17102:17102 LF.Poly <> p var
R17113:17113 LF.Poly <> ::'('_x_','_x_')' not
R17115:17116 LF.Poly <> ::'('_x_','_x_')' not
R17118:17118 LF.Poly <> ::'('_x_','_x_')' not
def 17144:17146 <> snd
R17167:17169 LF.Poly <> :type_scope:x_'*'_x not
R17166:17166 LF.Poly <> X var
R17170:17170 LF.Poly <> Y var
R17175:17175 LF.Poly <> Y var
R17188:17188 LF.Poly <> p var
R17199:17199 LF.Poly <> ::'('_x_','_x_')' not
R17201:17202 LF.Poly <> ::'('_x_','_x_')' not
R17204:17204 LF.Poly <> ::'('_x_','_x_')' not
def 17451:17457 <> combine
R17478:17481 LF.Poly <> list ind
R17483:17483 LF.Poly <> X var
R17492:17495 LF.Poly <> list ind
R17497:17497 LF.Poly <> Y var
R17513:17516 LF.Poly <> list ind
R17520:17520 LF.Poly <> :type_scope:x_'*'_x not
R17519:17519 LF.Poly <> X var
R17521:17521 LF.Poly <> Y var
R17539:17540 LF.Poly <> ly var
R17535:17536 LF.Poly <> lx var
R17551:17552 LF.Poly <> ::'['_']' not
R17560:17561 LF.Poly <> ::'['_']' not
R17570:17571 LF.Poly <> ::'['_']' not
R17576:17577 LF.Poly <> ::'['_']' not
R17584:17587 LF.Poly <> ::x_'::'_x not
R17593:17596 LF.Poly <> ::x_'::'_x not
R17609:17613 LF.Poly <> ::x_'::'_x not
R17627:17627 LF.Poly <> ::x_'::'_x not
R17603:17603 LF.Poly <> ::'('_x_','_x_')' not
R17605:17606 LF.Poly <> ::'('_x_','_x_')' not
R17608:17608 LF.Poly <> ::'('_x_','_x_')' not
R17614:17620 LF.Poly <> combine def
def 18301:18305 <> split
R18325:18328 LF.Poly <> list ind
R18332:18332 LF.Poly <> :type_scope:x_'*'_x not
R18331:18331 LF.Poly <> X var
R18333:18333 LF.Poly <> Y var
R18354:18354 LF.Poly <> :type_scope:x_'*'_x not
R18361:18365 LF.Poly <> :type_scope:x_'*'_x not
R18372:18372 LF.Poly <> :type_scope:x_'*'_x not
R18355:18358 LF.Poly <> list ind
R18360:18360 LF.Poly <> X var
R18366:18369 LF.Poly <> list ind
R18371:18371 LF.Poly <> Y var
def 18450:18459 <> test_split
R18491:18493 Coq.Init.Logic <> :type_scope:x_'='_x not
R18464:18468 LF.Poly <> split prfax
R18470:18470 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18480:18480 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18490:18490 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18471:18471 LF.Poly <> ::'('_x_','_x_')' not
R18473:18473 LF.Poly <> ::'('_x_','_x_')' not
R18479:18479 LF.Poly <> ::'('_x_','_x_')' not
R18474:18478 LF.Basics <> false constr
R18481:18481 LF.Poly <> ::'('_x_','_x_')' not
R18483:18483 LF.Poly <> ::'('_x_','_x_')' not
R18489:18489 LF.Poly <> ::'('_x_','_x_')' not
R18484:18488 LF.Basics <> false constr
R18494:18494 LF.Poly <> ::'('_x_','_x_')' not
R18500:18500 LF.Poly <> ::'('_x_','_x_')' not
R18514:18514 LF.Poly <> ::'('_x_','_x_')' not
R18495:18495 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18497:18497 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18499:18499 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18501:18501 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18507:18507 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18513:18513 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18502:18506 LF.Basics <> false constr
R18508:18512 LF.Basics <> false constr
mod 18952:18967 <> OptionPlayground
ind 18981:18986 OptionPlayground option
constr 19011:19014 OptionPlayground Some
constr 19036:19039 OptionPlayground None
R19019:19022 Coq.Init.Logic <> :type_scope:x_'->'_x not
R19023:19028 LF.Poly <> option ind
R19030:19030 LF.Poly <> X var
R19018:19018 LF.Poly <> X var
R19043:19048 LF.Poly <> option ind
R19050:19050 LF.Poly <> X var
R19064:19067 LF.Poly OptionPlayground Some constr
R19064:19067 LF.Poly OptionPlayground Some constr
R19086:19089 LF.Poly OptionPlayground None constr
R19086:19089 LF.Poly OptionPlayground None constr
R19101:19116 LF.Poly OptionPlayground <> mod
def 19226:19234 <> nth_error
R19252:19255 LF.Poly <> list ind
R19257:19257 LF.Poly <> X var
R19265:19267 Coq.Init.Datatypes <> nat ind
R19291:19296 Coq.Init.Datatypes <> option ind
R19298:19298 LF.Poly <> X var
R19311:19311 LF.Poly <> l var
R19322:19323 LF.Poly <> ::'['_']' not
R19328:19331 Coq.Init.Datatypes <> None constr
R19338:19341 LF.Poly <> ::x_'::'_x not
R19351:19357 LF.Basics <> beq_nat def
R19361:19361 Coq.Init.Datatypes <> O constr
R19359:19359 LF.Poly <> n var
R19380:19388 LF.Poly <> nth_error def
R19394:19397 Coq.Init.Peano <> pred syndef
R19399:19399 LF.Poly <> n var
R19368:19371 Coq.Init.Datatypes <> Some constr
def 19418:19432 <> test_nth_error1
R19457:19459 Coq.Init.Logic <> :type_scope:x_'='_x not
R19436:19444 LF.Poly <> nth_error def
R19446:19446 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19448:19448 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19450:19450 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19452:19452 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19454:19454 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19460:19463 Coq.Init.Datatypes <> Some constr
def 19501:19515 <> test_nth_error2
R19540:19542 Coq.Init.Logic <> :type_scope:x_'='_x not
R19519:19527 LF.Poly <> nth_error def
R19529:19529 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19533:19533 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19537:19537 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19530:19530 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19532:19532 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19534:19534 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19536:19536 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19543:19546 Coq.Init.Datatypes <> Some constr
R19548:19548 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19550:19550 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19586:19600 <> test_nth_error3
R19622:19624 Coq.Init.Logic <> :type_scope:x_'='_x not
R19604:19612 LF.Poly <> nth_error def
R19614:19614 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19619:19619 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19615:19618 LF.Basics <> true constr
R19625:19628 Coq.Init.Datatypes <> None constr
def 19884:19891 <> hd_error
R19909:19912 LF.Poly <> list ind
R19914:19914 LF.Poly <> X var
R19919:19924 Coq.Init.Datatypes <> option ind
R19926:19926 LF.Poly <> X var
R20123:20130 LF.Poly <> hd_error prfax
def 20142:20155 <> test_hd_error1
R20173:20175 Coq.Init.Logic <> :type_scope:x_'='_x not
R20159:20166 LF.Poly <> hd_error prfax
R20168:20168 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20170:20170 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20172:20172 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20176:20179 Coq.Init.Datatypes <> Some constr
def 20222:20235 <> test_hd_error2
R20258:20261 Coq.Init.Logic <> :type_scope:x_'='_x not
R20239:20246 LF.Poly <> hd_error prfax
R20249:20249 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20253:20253 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20257:20257 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20250:20250 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20252:20252 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20254:20254 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20256:20256 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20262:20265 Coq.Init.Datatypes <> Some constr
R20267:20267 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R20269:20269 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20961:20970 <> doit3times
R20985:20986 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20987:20987 LF.Poly <> X var
R20984:20984 LF.Poly <> X var
R20993:20993 LF.Poly <> X var
R20998:20998 LF.Poly <> X var
R21005:21005 LF.Poly <> f var
R21008:21008 LF.Poly <> f var
R21011:21011 LF.Poly <> f var
R21013:21013 LF.Poly <> n var
R21172:21181 LF.Poly <> doit3times def
def 21253:21267 <> test_doit3times
R21291:21293 Coq.Init.Logic <> :type_scope:x_'='_x not
R21270:21279 LF.Poly <> doit3times def
R21281:21288 LF.Basics <> minustwo def
def 21332:21347 <> test_doit3times'
R21370:21372 Coq.Init.Logic <> :type_scope:x_'='_x not
R21350:21359 LF.Poly <> doit3times def
R21366:21369 LF.Basics <> true constr
R21361:21364 LF.Basics <> negb def
R21373:21377 LF.Basics <> false constr
def 21768:21773 <> filter
R21792:21793 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21794:21797 LF.Basics <> bool ind
R21791:21791 LF.Poly <> X var
R21803:21806 LF.Poly <> list ind
R21808:21808 LF.Poly <> X var
R21830:21833 LF.Poly <> list ind
R21835:21835 LF.Poly <> X var
R21849:21849 LF.Poly <> l var
R21860:21861 LF.Poly <> ::'['_']' not
R21870:21871 LF.Poly <> ::'['_']' not
R21878:21881 LF.Poly <> ::x_'::'_x not
R21890:21893 LF.Poly <> test var
R21958:21963 LF.Poly <> filter def
R21965:21968 LF.Poly <> test var
R21903:21907 LF.Poly <> ::x_'::'_x not
R21921:21921 LF.Poly <> ::x_'::'_x not
R21908:21913 LF.Poly <> filter def
R21915:21918 LF.Poly <> test var
def 22149:22160 <> test_filter1
R22185:22187 Coq.Init.Logic <> :type_scope:x_'='_x not
R22163:22168 LF.Poly <> filter def
R22176:22176 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22178:22178 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22180:22180 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22182:22182 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22184:22184 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22170:22174 LF.Basics <> evenb def
R22188:22188 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22190:22190 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22192:22192 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22233:22243 <> length_is_1
R22261:22264 LF.Poly <> list ind
R22266:22266 LF.Poly <> X var
R22271:22274 LF.Basics <> bool ind
R22281:22287 LF.Basics <> beq_nat def
R22290:22295 LF.Poly <> length def
R22297:22297 LF.Poly <> l var
def 22312:22323 <> test_filter2
R22398:22402 Coq.Init.Logic <> :type_scope:x_'='_x not
R22330:22335 LF.Poly <> filter def
R22360:22361 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22368:22369 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22373:22374 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22378:22379 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22387:22388 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22391:22392 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22396:22397 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22362:22362 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22364:22365 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22367:22367 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22370:22370 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22372:22372 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22375:22375 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22377:22377 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22380:22380 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22382:22382 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22384:22384 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22386:22386 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22389:22390 LF.Poly <> ::'['_']' not
R22393:22393 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22395:22395 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22337:22347 LF.Poly <> length_is_1 def
R22403:22404 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22408:22409 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22413:22414 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22418:22419 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22405:22405 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22407:22407 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22410:22410 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22412:22412 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22415:22415 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22417:22417 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22578:22593 <> countoddmembers'
R22598:22601 LF.Poly <> list ind
R22603:22605 Coq.Init.Datatypes <> nat ind
R22610:22612 Coq.Init.Datatypes <> nat ind
R22619:22624 LF.Poly <> length def
R22627:22632 LF.Poly <> filter def
R22639:22639 LF.Poly <> l var
R22634:22637 LF.Basics <> oddb def
def 22652:22673 <> test_countoddmembers'1
R22708:22710 Coq.Init.Logic <> :type_scope:x_'='_x not
R22678:22693 LF.Poly <> countoddmembers' def
R22695:22695 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22697:22697 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22699:22699 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22701:22701 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22703:22703 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22705:22705 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22707:22707 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22748:22769 <> test_countoddmembers'2
R22798:22800 Coq.Init.Logic <> :type_scope:x_'='_x not
R22774:22789 LF.Poly <> countoddmembers' def
R22791:22791 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22793:22793 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22795:22795 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22797:22797 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22838:22859 <> test_countoddmembers'3
R22884:22886 Coq.Init.Logic <> :type_scope:x_'='_x not
R22864:22879 LF.Poly <> countoddmembers' def
R22881:22883 LF.Poly <> nil constr
def 23665:23678 <> test_anon_fun'
R23712:23714 Coq.Init.Logic <> :type_scope:x_'='_x not
R23683:23692 LF.Poly <> doit3times def
R23705:23707 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23704:23704 LF.Poly <> n var
R23708:23708 LF.Poly <> n var
def 23955:23967 <> test_filter2'
R24062:24066 Coq.Init.Logic <> :type_scope:x_'='_x not
R23974:23979 LF.Poly <> filter def
R24024:24025 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24032:24033 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24037:24038 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24042:24043 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24051:24052 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24055:24056 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24060:24061 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24026:24026 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24028:24029 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24031:24031 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24034:24034 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24036:24036 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24039:24039 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24041:24041 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24044:24044 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24046:24046 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24048:24048 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24050:24050 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24053:24054 LF.Poly <> ::'['_']' not
R24057:24057 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24059:24059 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23991:23997 LF.Basics <> beq_nat def
R24000:24005 LF.Poly <> length def
R24007:24007 LF.Poly <> l var
R24067:24068 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24072:24073 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24077:24078 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24082:24083 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24069:24069 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24071:24071 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24074:24074 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24076:24076 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24079:24079 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24081:24081 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24385:24399 <> filter_even_gt7
R24406:24409 LF.Poly <> list ind
R24411:24413 Coq.Init.Datatypes <> nat ind
R24418:24421 LF.Poly <> list ind
R24423:24425 Coq.Init.Datatypes <> nat ind
def 24503:24524 <> test_filter_even_gt7_1
R24565:24567 Coq.Init.Logic <> :type_scope:x_'='_x not
R24530:24544 LF.Poly <> filter_even_gt7 prfax
R24546:24546 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24548:24548 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24550:24550 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24552:24552 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24554:24554 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24557:24557 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24559:24559 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24562:24562 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24564:24564 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24568:24568 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24571:24571 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24574:24574 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24576:24576 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24618:24639 <> test_filter_even_gt7_2
R24675:24677 Coq.Init.Logic <> :type_scope:x_'='_x not
R24645:24659 LF.Poly <> filter_even_gt7 prfax
R24661:24661 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24663:24663 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24665:24665 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24667:24667 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24670:24670 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24674:24674 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24678:24679 LF.Poly <> ::'['_']' not
def 25343:25351 <> partition
R25394:25397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25398:25401 LF.Basics <> bool ind
R25393:25393 LF.Poly <> X var
R25430:25433 LF.Poly <> list ind
R25435:25435 LF.Poly <> X var
R25465:25467 LF.Poly <> :type_scope:x_'*'_x not
R25459:25462 LF.Poly <> list ind
R25464:25464 LF.Poly <> X var
R25468:25471 LF.Poly <> list ind
R25473:25473 LF.Poly <> X var
def 25551:25565 <> test_partition1
R25594:25596 Coq.Init.Logic <> :type_scope:x_'='_x not
R25568:25576 LF.Poly <> partition prfax
R25583:25583 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25585:25585 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25587:25587 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25589:25589 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25591:25591 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25593:25593 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25578:25581 LF.Basics <> oddb def
R25597:25597 LF.Poly <> ::'('_x_','_x_')' not
R25605:25606 LF.Poly <> ::'('_x_','_x_')' not
R25612:25612 LF.Poly <> ::'('_x_','_x_')' not
R25598:25598 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25600:25600 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25602:25602 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25604:25604 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25607:25607 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25609:25609 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25611:25611 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25652:25666 <> test_partition2
R25703:25705 Coq.Init.Logic <> :type_scope:x_'='_x not
R25669:25677 LF.Poly <> partition prfax
R25696:25696 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25698:25698 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25700:25700 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25702:25702 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25689:25693 LF.Basics <> false constr
R25706:25706 LF.Poly <> ::'('_x_','_x_')' not
R25709:25710 LF.Poly <> ::'('_x_','_x_')' not
R25718:25718 LF.Poly <> ::'('_x_','_x_')' not
R25707:25708 LF.Poly <> ::'['_']' not
R25711:25711 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25713:25713 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25715:25715 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25717:25717 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25918:25920 <> map
R25938:25939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25940:25940 LF.Poly <> Y var
R25937:25937 LF.Poly <> X var
R25946:25949 LF.Poly <> list ind
R25951:25951 LF.Poly <> X var
R25957:25960 LF.Poly <> list ind
R25962:25962 LF.Poly <> Y var
R25976:25976 LF.Poly <> l var
R25987:25988 LF.Poly <> ::'['_']' not
R25997:25998 LF.Poly <> ::'['_']' not
R26005:26008 LF.Poly <> ::x_'::'_x not
R26014:26014 LF.Poly <> ::x_'::'_x not
R26018:26023 LF.Poly <> ::x_'::'_x not
R26031:26031 LF.Poly <> ::x_'::'_x not
R26015:26015 LF.Poly <> f var
R26024:26026 LF.Poly <> map def
R26028:26028 LF.Poly <> f var
def 26248:26256 <> test_map1
R26290:26292 Coq.Init.Logic <> :type_scope:x_'='_x not
R26259:26261 LF.Poly <> map def
R26283:26283 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26285:26285 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26287:26287 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26289:26289 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26273:26276 Coq.Init.Peano <> plus syndef
R26280:26280 LF.Poly <> x var
R26293:26293 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26295:26295 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26297:26297 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26299:26299 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26593:26601 <> test_map2
R26624:26626 Coq.Init.Logic <> :type_scope:x_'='_x not
R26606:26608 LF.Poly <> map def
R26615:26615 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26617:26617 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26619:26619 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26621:26621 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26623:26623 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26610:26613 LF.Basics <> oddb def
R26627:26627 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26633:26633 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26638:26638 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26644:26644 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26649:26649 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26628:26632 LF.Basics <> false constr
R26634:26637 LF.Basics <> true constr
R26639:26643 LF.Basics <> false constr
R26645:26648 LF.Basics <> true constr
def 26838:26846 <> test_map3
R26894:26898 Coq.Init.Logic <> :type_scope:x_'='_x not
R26853:26855 LF.Poly <> map def
R26885:26885 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26887:26887 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26889:26889 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26891:26891 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26893:26893 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26867:26867 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26875:26875 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26882:26882 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26868:26872 LF.Basics <> evenb def
R26874:26874 LF.Poly <> n var
R26876:26879 LF.Basics <> oddb def
R26881:26881 LF.Poly <> n var
R26899:26899 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26912:26912 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26925:26925 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26938:26938 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26951:26951 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26900:26900 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26905:26905 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26911:26911 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26901:26904 LF.Basics <> true constr
R26906:26910 LF.Basics <> false constr
R26913:26913 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26919:26919 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26924:26924 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26914:26918 LF.Basics <> false constr
R26920:26923 LF.Basics <> true constr
R26926:26926 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26931:26931 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26937:26937 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26927:26930 LF.Basics <> true constr
R26932:26936 LF.Basics <> false constr
R26939:26939 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26945:26945 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26950:26950 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26940:26944 LF.Basics <> false constr
R26946:26949 LF.Basics <> true constr
prf 27215:27221 <> map_rev
R27251:27254 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27255:27255 LF.Poly <> Y var
R27250:27250 LF.Poly <> X var
R27263:27266 LF.Poly <> list ind
R27268:27268 LF.Poly <> X var
R27287:27289 Coq.Init.Logic <> :type_scope:x_'='_x not
R27274:27276 LF.Poly <> map def
R27281:27283 LF.Poly <> rev def
R27285:27285 LF.Poly <> l var
R27278:27278 LF.Poly <> f var
R27290:27292 LF.Poly <> rev def
R27295:27297 LF.Poly <> map def
R27301:27301 LF.Poly <> l var
R27299:27299 LF.Poly <> f var
def 27817:27824 <> flat_map
R27843:27846 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27847:27850 LF.Poly <> list ind
R27852:27852 LF.Poly <> Y var
R27842:27842 LF.Poly <> X var
R27859:27862 LF.Poly <> list ind
R27864:27864 LF.Poly <> X var
R27889:27892 LF.Poly <> list ind
R27894:27894 LF.Poly <> Y var
def 27973:27986 <> test_flat_map1
R28026:28030 Coq.Init.Logic <> :type_scope:x_'='_x not
R27991:27998 LF.Poly <> flat_map prfax
R28019:28019 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28021:28021 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28023:28023 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28025:28025 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28010:28010 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28012:28012 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28014:28014 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28016:28016 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28011:28011 LF.Poly <> n var
R28013:28013 LF.Poly <> n var
R28015:28015 LF.Poly <> n var
R28031:28031 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28033:28034 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28036:28037 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28039:28040 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28042:28043 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28045:28046 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28048:28049 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28051:28052 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28054:28055 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28057:28057 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28262:28271 <> option_map
R28292:28295 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28296:28296 LF.Poly <> Y var
R28291:28291 LF.Poly <> X var
R28305:28310 Coq.Init.Datatypes <> option ind
R28312:28312 LF.Poly <> X var
R28339:28344 Coq.Init.Datatypes <> option ind
R28346:28346 LF.Poly <> Y var
R28359:28360 LF.Poly <> xo var
R28373:28376 Coq.Init.Datatypes <> None constr
R28381:28384 Coq.Init.Datatypes <> None constr
R28392:28395 Coq.Init.Datatypes <> Some constr
R28402:28405 Coq.Init.Datatypes <> Some constr
R28408:28408 LF.Poly <> f var
def 29247:29250 <> fold
R29269:29270 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29272:29273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29274:29274 LF.Poly <> Y var
R29271:29271 LF.Poly <> Y var
R29268:29268 LF.Poly <> X var
R29281:29284 LF.Poly <> list ind
R29286:29286 LF.Poly <> X var
R29293:29293 LF.Poly <> Y var
R29323:29323 LF.Poly <> Y var
R29336:29336 LF.Poly <> l var
R29347:29349 LF.Poly <> nil constr
R29354:29354 LF.Poly <> b var
R29361:29364 LF.Poly <> ::x_'::'_x not
R29370:29370 LF.Poly <> f var
R29375:29378 LF.Poly <> fold def
R29384:29384 LF.Poly <> b var
R29380:29380 LF.Poly <> f var
R29859:29862 LF.Poly <> fold def
R29864:29867 LF.Basics <> andb def
def 29929:29941 <> fold_example1
R29968:29970 Coq.Init.Logic <> :type_scope:x_'='_x not
R29947:29950 LF.Poly <> fold def
R29957:29957 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29959:29959 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29961:29961 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29963:29963 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29965:29965 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29952:29955 Coq.Init.Peano <> mult syndef
def 30009:30021 <> fold_example2
R30064:30066 Coq.Init.Logic <> :type_scope:x_'='_x not
R30027:30030 LF.Poly <> fold def
R30060:30063 LF.Basics <> true constr
R30037:30037 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30042:30042 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30047:30047 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30053:30053 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30058:30058 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30038:30041 LF.Basics <> true constr
R30043:30046 LF.Basics <> true constr
R30048:30052 LF.Basics <> false constr
R30054:30057 LF.Basics <> true constr
R30032:30035 LF.Basics <> andb def
R30067:30071 LF.Basics <> false constr
def 30108:30120 <> fold_example3
R30157:30159 Coq.Init.Logic <> :type_scope:x_'='_x not
R30126:30129 LF.Poly <> fold def
R30155:30156 LF.Poly <> ::'['_']' not
R30136:30136 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30140:30140 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30143:30143 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30149:30149 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30153:30153 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30137:30137 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30139:30139 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30141:30142 LF.Poly <> ::'['_']' not
R30144:30144 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30146:30146 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30148:30148 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30150:30150 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30152:30152 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30131:30133 LF.Poly <> app def
R30160:30160 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30162:30162 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30164:30164 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30166:30166 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30168:30168 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 30620:30656 <> manual_grade_for_fold_types_different
R30660:30665 Coq.Init.Datatypes <> option ind
R30668:30671 LF.Poly <> prod ind
R30677:30682 Coq.Strings.String <> string ind
R30673:30675 Coq.Init.Datatypes <> nat ind
R30688:30691 Coq.Init.Datatypes <> None constr
def 31241:31248 <> constfun
R31264:31264 LF.Poly <> X var
R31272:31273 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31274:31274 LF.Poly <> X var
R31269:31271 Coq.Init.Datatypes <> nat ind
R31288:31290 Coq.Init.Datatypes <> nat ind
R31296:31296 LF.Poly <> x var
def 31311:31315 <> ftrue
R31320:31327 LF.Poly <> constfun def
R31329:31332 LF.Basics <> true constr
def 31344:31360 <> constfun_example1
R31371:31373 Coq.Init.Logic <> :type_scope:x_'='_x not
R31364:31368 LF.Poly <> ftrue def
R31374:31377 LF.Basics <> true constr
def 31414:31430 <> constfun_example2
R31449:31451 Coq.Init.Logic <> :type_scope:x_'='_x not
R31435:31442 LF.Poly <> constfun def
R31653:31656 Coq.Init.Peano <> plus syndef
def 32267:32271 <> plus3
R32276:32279 Coq.Init.Peano <> plus syndef
R32290:32294 LF.Poly <> plus3 def
def 32306:32315 <> test_plus3
R32329:32331 Coq.Init.Logic <> :type_scope:x_'='_x not
R32322:32326 LF.Poly <> plus3 def
def 32369:32379 <> test_plus3'
R32403:32405 Coq.Init.Logic <> :type_scope:x_'='_x not
R32385:32394 LF.Poly <> doit3times def
R32396:32400 LF.Poly <> plus3 def
def 32443:32454 <> test_plus3''
R32480:32482 Coq.Init.Logic <> :type_scope:x_'='_x not
R32459:32468 LF.Poly <> doit3times def
R32471:32474 Coq.Init.Peano <> plus syndef
mod 32623:32631 <> Exercises
def 32834:32844 Exercises fold_length
R32862:32865 LF.Poly <> list ind
R32867:32867 LF.Poly <> X var
R32872:32874 Coq.Init.Datatypes <> nat ind
R32881:32884 LF.Poly <> fold def
R32903:32903 LF.Poly <> l var
R32898:32898 Coq.Init.Datatypes <> S constr
R32900:32900 LF.Poly <> n var
def 32917:32933 Exercises test_fold_length1
R32956:32958 Coq.Init.Logic <> :type_scope:x_'='_x not
R32937:32947 LF.Poly Exercises fold_length def
R32949:32949 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32951:32951 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32953:32953 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32955:32955 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 33044:33062 Exercises fold_length_correct
R33080:33083 LF.Poly <> list ind
R33085:33085 LF.Poly <> X var
R33104:33106 Coq.Init.Logic <> :type_scope:x_'='_x not
R33091:33101 LF.Poly Exercises fold_length def
R33103:33103 LF.Poly <> l var
R33107:33112 LF.Poly <> length def
R33114:33114 LF.Poly <> l var
def 33300:33307 Exercises fold_map
R33326:33329 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33330:33330 LF.Poly <> Y var
R33325:33325 LF.Poly <> X var
R33337:33340 LF.Poly <> list ind
R33342:33342 LF.Poly <> X var
R33347:33350 LF.Poly <> list ind
R33352:33352 LF.Poly <> Y var
def 33601:33625 Exercises manual_grade_for_fold_map
R33629:33634 Coq.Init.Datatypes <> option ind
R33637:33640 LF.Poly <> prod ind
R33646:33651 Coq.Strings.String <> string ind
R33642:33644 Coq.Init.Datatypes <> nat ind
R33657:33660 Coq.Init.Datatypes <> None constr
def 34475:34484 Exercises prod_curry
R34513:34516 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34517:34517 LF.Poly <> Z var
R34509:34511 LF.Poly <> :type_scope:x_'*'_x not
R34508:34508 LF.Poly <> X var
R34512:34512 LF.Poly <> Y var
R34525:34525 LF.Poly <> X var
R34533:34533 LF.Poly <> Y var
R34538:34538 LF.Poly <> Z var
R34543:34543 LF.Poly <> f var
R34545:34545 LF.Poly <> ::'('_x_','_x_')' not
R34547:34548 LF.Poly <> ::'('_x_','_x_')' not
R34550:34550 LF.Poly <> ::'('_x_','_x_')' not
R34546:34546 LF.Poly <> x var
R34549:34549 LF.Poly <> y var
def 34695:34706 Exercises prod_uncurry
R34731:34734 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34736:34739 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34740:34740 LF.Poly <> Z var
R34735:34735 LF.Poly <> Y var
R34730:34730 LF.Poly <> X var
R34749:34751 LF.Poly <> :type_scope:x_'*'_x not
R34748:34748 LF.Poly <> X var
R34752:34752 LF.Poly <> Y var
R34757:34757 LF.Poly <> Z var
def 34965:34974 Exercises test_map1'
R34997:34999 Coq.Init.Logic <> :type_scope:x_'='_x not
R34977:34979 LF.Poly <> map def
R34990:34990 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34992:34992 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34994:34994 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34996:34996 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34982:34985 Coq.Init.Peano <> plus syndef
R35000:35000 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35002:35002 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35004:35004 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35006:35006 LF.Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35176:35185 LF.Poly Exercises prod_curry def
R35195:35206 LF.Poly Exercises prod_uncurry prfax
prf 35218:35230 Exercises uncurry_curry
R35286:35289 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35291:35294 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35295:35295 LF.Poly <> Z var
R35290:35290 LF.Poly <> Y var
R35285:35285 LF.Poly <> X var
R35360:35362 Coq.Init.Logic <> :type_scope:x_'='_x not
R35329:35338 LF.Poly Exercises prod_curry def
R35359:35359 LF.Poly <> y var
R35357:35357 LF.Poly <> x var
R35341:35352 LF.Poly Exercises prod_uncurry prfax
R35354:35354 LF.Poly <> f var
R35363:35363 LF.Poly <> f var
R35367:35367 LF.Poly <> y var
R35365:35365 LF.Poly <> x var
prf 35417:35429 Exercises curry_uncurry
R35484:35484 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35490:35494 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35495:35495 LF.Poly <> Z var
R35486:35488 LF.Poly <> :type_scope:x_'*'_x not
R35485:35485 LF.Poly <> X var
R35489:35489 LF.Poly <> Y var
R35504:35506 LF.Poly <> :type_scope:x_'*'_x not
R35503:35503 LF.Poly <> X var
R35507:35507 LF.Poly <> Y var
R35542:35544 Coq.Init.Logic <> :type_scope:x_'='_x not
R35513:35524 LF.Poly Exercises prod_uncurry prfax
R35541:35541 LF.Poly <> p var
R35527:35536 LF.Poly Exercises prod_curry def
R35538:35538 LF.Poly <> f var
R35545:35545 LF.Poly <> f var
R35547:35547 LF.Poly <> p var
def 36091:36121 Exercises manual_grade_for_informal_proof
R36125:36130 Coq.Init.Datatypes <> option ind
R36133:36136 LF.Poly <> prod ind
R36142:36147 Coq.Strings.String <> string ind
R36138:36140 Coq.Init.Datatypes <> nat ind
R36153:36156 Coq.Init.Datatypes <> None constr
mod 36541:36546 <> Exercises.Church
def 36560:36562 Exercises.Church nat
R36584:36584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36591:36595 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36597:36600 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36601:36601 LF.Poly <> X var
R36596:36596 LF.Poly <> X var
R36586:36589 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36590:36590 LF.Poly <> X var
R36585:36585 LF.Poly <> X var
def 36757:36759 Exercises.Church one
R36763:36765 LF.Poly Exercises.Church nat def
R36793:36796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36797:36797 LF.Poly <> X var
R36792:36792 LF.Poly <> X var
R36805:36805 LF.Poly <> X var
R36811:36811 LF.Poly <> f var
R36813:36813 LF.Poly <> x var
def 36893:36895 Exercises.Church two
R36899:36901 LF.Poly Exercises.Church nat def
R36929:36932 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36933:36933 LF.Poly <> X var
R36928:36928 LF.Poly <> X var
R36941:36941 LF.Poly <> X var
R36947:36947 LF.Poly <> f var
R36950:36950 LF.Poly <> f var
R36952:36952 LF.Poly <> x var
def 37132:37135 Exercises.Church zero
R37139:37141 LF.Poly Exercises.Church nat def
R37169:37172 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37173:37173 LF.Poly <> X var
R37168:37168 LF.Poly <> X var
R37181:37181 LF.Poly <> X var
R37187:37187 LF.Poly <> x var
def 37462:37466 Exercises.Church three
R37470:37472 LF.Poly Exercises.Church nat def
R37478:37487 LF.Poly <> doit3times def
def 37695:37698 Exercises.Church succ
R37705:37707 LF.Poly Exercises.Church nat def
R37712:37714 LF.Poly Exercises.Church nat def
def 37792:37797 Exercises.Church succ_1
R37810:37812 Coq.Init.Logic <> :type_scope:x_'='_x not
R37801:37804 LF.Poly Exercises.Church succ prfax
R37806:37809 LF.Poly Exercises.Church zero def
R37813:37815 LF.Poly Exercises.Church one def
def 37863:37868 Exercises.Church succ_2
R37880:37882 Coq.Init.Logic <> :type_scope:x_'='_x not
R37872:37875 LF.Poly Exercises.Church succ prfax
R37877:37879 LF.Poly Exercises.Church one def
R37883:37885 LF.Poly Exercises.Church two def
def 37933:37938 Exercises.Church succ_3
R37950:37952 Coq.Init.Logic <> :type_scope:x_'='_x not
R37942:37945 LF.Poly Exercises.Church succ prfax
R37947:37949 LF.Poly Exercises.Church two def
R37953:37957 LF.Poly Exercises.Church three def
def 38049:38052 Exercises.Church plus
R38061:38063 LF.Poly Exercises.Church nat def
R38068:38070 LF.Poly Exercises.Church nat def
def 38148:38153 Exercises.Church plus_1
R38170:38172 Coq.Init.Logic <> :type_scope:x_'='_x not
R38157:38160 LF.Poly Exercises.Church plus prfax
R38167:38169 LF.Poly Exercises.Church one def
R38162:38165 LF.Poly Exercises.Church zero def
R38173:38175 LF.Poly Exercises.Church one def
def 38223:38228 Exercises.Church plus_2
R38246:38248 Coq.Init.Logic <> :type_scope:x_'='_x not
R38232:38235 LF.Poly Exercises.Church plus prfax
R38241:38245 LF.Poly Exercises.Church three def
R38237:38239 LF.Poly Exercises.Church two def
R38249:38252 LF.Poly Exercises.Church plus prfax
R38260:38262 LF.Poly Exercises.Church two def
R38254:38258 LF.Poly Exercises.Church three def
def 38310:38315 Exercises.Church plus_3
R38346:38348 Coq.Init.Logic <> :type_scope:x_'='_x not
R38321:38324 LF.Poly Exercises.Church plus prfax
R38341:38345 LF.Poly Exercises.Church three def
R38327:38330 LF.Poly Exercises.Church plus prfax
R38336:38338 LF.Poly Exercises.Church two def
R38332:38334 LF.Poly Exercises.Church two def
R38349:38352 LF.Poly Exercises.Church plus prfax
R38359:38362 LF.Poly Exercises.Church plus prfax
R38370:38374 LF.Poly Exercises.Church three def
R38364:38368 LF.Poly Exercises.Church three def
R38354:38356 LF.Poly Exercises.Church one def
def 38450:38453 Exercises.Church mult
R38462:38464 LF.Poly Exercises.Church nat def
R38469:38471 LF.Poly Exercises.Church nat def
def 38549:38554 Exercises.Church mult_1
R38570:38572 Coq.Init.Logic <> :type_scope:x_'='_x not
R38558:38561 LF.Poly Exercises.Church mult prfax
R38567:38569 LF.Poly Exercises.Church one def
R38563:38565 LF.Poly Exercises.Church one def
R38573:38575 LF.Poly Exercises.Church one def
def 38623:38628 Exercises.Church mult_2
R38660:38662 Coq.Init.Logic <> :type_scope:x_'='_x not
R38632:38635 LF.Poly Exercises.Church mult prfax
R38643:38646 LF.Poly Exercises.Church plus prfax
R38654:38658 LF.Poly Exercises.Church three def
R38648:38652 LF.Poly Exercises.Church three def
R38637:38640 LF.Poly Exercises.Church zero def
R38663:38666 LF.Poly Exercises.Church zero def
def 38714:38719 Exercises.Church mult_3
R38737:38739 Coq.Init.Logic <> :type_scope:x_'='_x not
R38723:38726 LF.Poly Exercises.Church mult prfax
R38732:38736 LF.Poly Exercises.Church three def
R38728:38730 LF.Poly Exercises.Church two def
R38740:38743 LF.Poly Exercises.Church plus prfax
R38751:38755 LF.Poly Exercises.Church three def
R38745:38749 LF.Poly Exercises.Church three def
def 39085:39087 Exercises.Church exp
R39096:39098 LF.Poly Exercises.Church nat def
R39103:39105 LF.Poly Exercises.Church nat def
def 39183:39187 Exercises.Church exp_1
R39202:39204 Coq.Init.Logic <> :type_scope:x_'='_x not
R39191:39193 LF.Poly Exercises.Church exp prfax
R39199:39201 LF.Poly Exercises.Church two def
R39195:39197 LF.Poly Exercises.Church two def
R39205:39208 LF.Poly Exercises.Church plus prfax
R39214:39216 LF.Poly Exercises.Church two def
R39210:39212 LF.Poly Exercises.Church two def
def 39264:39268 Exercises.Church exp_2
R39285:39287 Coq.Init.Logic <> :type_scope:x_'='_x not
R39272:39274 LF.Poly Exercises.Church exp prfax
R39282:39284 LF.Poly Exercises.Church two def
R39276:39280 LF.Poly Exercises.Church three def
R39288:39291 LF.Poly Exercises.Church plus prfax
R39319:39321 LF.Poly Exercises.Church one def
R39294:39297 LF.Poly Exercises.Church mult prfax
R39304:39307 LF.Poly Exercises.Church mult prfax
R39313:39315 LF.Poly Exercises.Church two def
R39309:39311 LF.Poly Exercises.Church two def
R39299:39301 LF.Poly Exercises.Church two def
def 39369:39373 Exercises.Church exp_3
R39391:39393 Coq.Init.Logic <> :type_scope:x_'='_x not
R39377:39379 LF.Poly Exercises.Church exp prfax
R39387:39390 LF.Poly Exercises.Church zero def
R39381:39385 LF.Poly Exercises.Church three def
R39394:39396 LF.Poly Exercises.Church one def
R39440:39445 LF.Poly Exercises.Church <> mod
def 39500:39534 Exercises manual_grade_for_succ_plus_mult_exp
R39538:39543 Coq.Init.Datatypes <> option ind
R39546:39549 LF.Poly <> prod ind
R39555:39560 Coq.Strings.String <> string ind
R39551:39553 Coq.Init.Datatypes <> nat ind
R39566:39569 Coq.Init.Datatypes <> None constr
R39587:39595 LF.Poly Exercises <> mod
